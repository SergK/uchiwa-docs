<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Uchiwa Documentation</title>
    <link>https://docs.uchiwa.io/</link>
    <description>Recent content on Uchiwa Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    
	<atom:link href="https://docs.uchiwa.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Uchiwa</title>
      <link>https://docs.uchiwa.io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/</guid>
      <description> What is Uchiwa? Uchiwa is a simple yet effective open-source dashboard for the Sensu monitoring framework.
With Uchiwa, you are able to enhance your monitoring platform:
 Improve operational visibility with a single pane of glass Build tooling against a federated API Share components and services status with your stakeholders  Uchiwa is:
 Open-source: Download it and customize it Light: No dependencies and a small footprint Powerful: Manage ten of thousands of servers, applications and others Easy to use: Abstract complex monitoring concepts to your users  </description>
    </item>
    
    <item>
      <title>Basic Concepts</title>
      <link>https://docs.uchiwa.io/getting-started/basic-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/getting-started/basic-concepts/</guid>
      <description>Datacenter A datacenter is a logical representation of a Sensu cluster. Datacenters can be used, for example, to organize physical datacenters or environements.
Sensu See Sensu documentation for more concepts.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://docs.uchiwa.io/getting-started/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/getting-started/installation/</guid>
      <description>Manual Installation See the download page to download the packages.
Debian/Ubuntu Install the GPG public key:
wget -q https://sensu.global.ssl.fastly.net/apt/pubkey.gpg -O- | sudo apt-key add -  Determine the codename of the Ubuntu/Debian release on your system:
. /etc/os-release &amp;amp;&amp;amp; echo $VERSION &amp;quot;14.04.4 LTS, Trusty Tahr&amp;quot; # codename for this system is &amp;quot;trusty&amp;quot;  Create an APT configuration file at /etc/apt/sources.list.d/sensu.list:
export CODENAME=your_release_codename_here # e.g. &amp;quot;trusty&amp;quot; echo &amp;quot;deb https://sensu.global.ssl.fastly.net/apt $CODENAME main&amp;quot; | sudo tee /etc/apt/sources.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://docs.uchiwa.io/getting-started/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/getting-started/configuration/</guid>
      <description>Configuration Load Order Uchiwa loads configuration from these sources in the following order:
 Uchiwa loads configuration from the configuration file (by default, this is located at /etc/sensu/uchiwa.json which is provided with the -c command line argument). Uchiwa loads configuration snippets from configuration files located in one or multiple Uchiwa configuration directories (by default, this is the /etc/sensu/dashboard.d/ directory which is provided with the -d command line argument).  Minimal Configuration { &amp;quot;sensu&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;Site 1&amp;quot;, &amp;quot;host&amp;quot;: &amp;quot;api1.</description>
    </item>
    
    <item>
      <title>High Availability</title>
      <link>https://docs.uchiwa.io/guides/high-availability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/guides/high-availability/</guid>
      <description>Datacenters High Availability You can define multiple Sensu APIs by datacenter in order to provide failover and rudimentary load balancing between these APIs.
To get started with this feature, you&amp;rsquo;ll simply need to define at least two Sensu objects with the same name. Here&amp;rsquo;s a basic example:
{ &amp;quot;sensu&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;us-east-1&amp;quot;, &amp;quot;host&amp;quot;: &amp;quot;10.0.0.1&amp;quot;, &amp;quot;port&amp;quot;: 4567 }, { &amp;quot;name&amp;quot;: &amp;quot;us-east-1&amp;quot;, &amp;quot;host&amp;quot;: &amp;quot;10.0.0.2&amp;quot;, &amp;quot;port&amp;quot;: 4567 } ] }  With this configuration, the datacenter us-east-1 now has two APIs (10.</description>
    </item>
    
    <item>
      <title>Search Queries</title>
      <link>https://docs.uchiwa.io/guides/search-queries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/guides/search-queries/</guid>
      <description>Queries The most basic query is composed of a value but can also contains a field and its value, in the form of field:value. When only specifying the value, all fields are tested against it.
A query can use any field, visible or not, to match a value, such as:
 us-west-1 dc:us-west-1 subscriber:rabbitmq subscription:linux team:webops  Regular Expressions Javascript&amp;rsquo;s RegExp object is used to retrieve the matches, thus the following special characters are available to use exclusively with field:value queries.</description>
    </item>
    
    <item>
      <title>Security</title>
      <link>https://docs.uchiwa.io/guides/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/guides/security/</guid>
      <description>Encrypted Passwords You can place hashed passwords in the password attributes, but only within the uchiwa object, in order to obfuscate users passwords in your configuration files.
Please note that you must absolutely use the {crypt} prefix when using an encrypted password. For example:
&amp;quot;password&amp;quot;: &amp;quot;{crypt}$1$MteWnoFT$yhEi8KMxO794K0TIriZcI0&amp;quot;  The following algorithms are supported (along the commands to create the hashes):
   Algorithm Command     APR1 openssl passwd -apr1 MY_PASSWORD   MD5 mkpasswd --method=MD5 MY_PASSWORD   SHA-256 mkpasswd --method=SHA-256 MY_PASSWORD   SHA-512 mkpasswd --method=SHA-512 MY_PASSWORD    Alternatively, you could use the Passlib hashing library for Python 2 &amp;amp; 3.</description>
    </item>
    
    <item>
      <title>Troubleshooting</title>
      <link>https://docs.uchiwa.io/guides/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/guides/troubleshooting/</guid>
      <description>Authentication How do I disable Uchiwa built-in authentication? In order to remove Uchiwa authentication, you simply need to remove or leave empty the user, pass and users attributes from the Uchiwa Configuration on your configuration file.
Checks My standalone check does not appear in the checks view Uchiwa uses the /checks Sensu API endpoint to build the checks list. This endpoint only provides the checks that are defined and known by the Sensu server itself, therefore standalone checks that are only defined on some particular clients can&amp;rsquo;t be shown.</description>
    </item>
    
    <item>
      <title>Aggregates</title>
      <link>https://docs.uchiwa.io/reference/aggregates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/reference/aggregates/</guid>
      <description>To understand aggregates in Sensu, please refer yourself to the Sensu documentation.
List All Aggregates To view all aggregates, head over to the aggregates view.
View An Aggregate To see the detail of a specific aggregate, click on it from the aggregates view. From there, you can see the check and client members, in addition to the results of every check members.
Delete An Aggregate It&amp;rsquo;s currently impossible to delete an aggregate from Uchiwa, but we would love to have you contribute to Uchiwa by implementing this feature!</description>
    </item>
    
    <item>
      <title>Checks</title>
      <link>https://docs.uchiwa.io/reference/checks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/reference/checks/</guid>
      <description>To understand checks in Sensu, please refer yourself to the Sensu documentation.
List All Checks To view all checks, head over to the checks view. Please note that standalone checks that are not installed on the Sensu Server will not be displayed.
Issue A Check Request You can force a check request across a datacenter by selecting one or multiple checks on the checks view and clicking on the Issue Check Request action within the Bulk Actions dropdown menu.</description>
    </item>
    
    <item>
      <title>Clients</title>
      <link>https://docs.uchiwa.io/reference/clients/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/reference/clients/</guid>
      <description>To understand clients in Sensu, please refer yourself to the Sensu documentation.
List All Clients To view all clients, including Sensu proxy clients (formerly known as &amp;ldquo;Just-in-time&amp;rdquo; or &amp;ldquo;JIT&amp;rdquo; clients), head over to the clients view.
View A Client To see the detail of a specific client, click on it from the clients view. From there, you can see the client data of the left panel and the check results data on the right one.</description>
    </item>
    
    <item>
      <title>Events</title>
      <link>https://docs.uchiwa.io/reference/events/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/reference/events/</guid>
      <description>To understand events in Sensu, please refer yourself to the Sensu documentation.
List All Events To view all events, head over to the events view.
View An Event To see the detail of a specific event, click on it from the events view.
Resolve An Event You can resolve an event by selecting one or multiple events on the events view and clicking on the Resolve action within the Bulk Actions dropdown menu.</description>
    </item>
    
    <item>
      <title>Silencing</title>
      <link>https://docs.uchiwa.io/reference/silencing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/reference/silencing/</guid>
      <description>Follow these instructions to silence or unsilence an element.
Silence a check Across a datacenter You can silence a check for a given datacenter by selecting one or multiple checks on the checks view and clicking on the Silence/Unsilence action within the Bulk Actions dropdown menu.
For a particular client Access the client view for this client and click on the silence icon corresponding to the check on the right panel.</description>
    </item>
    
    <item>
      <title>Authentication</title>
      <link>https://docs.uchiwa.io/api/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/api/authentication/</guid>
      <description>In order to use the Uchiwa API when authentication is enabled, you must provide an access token with every request.
Remember to keep your access tokens secret and use HTTPS wherever possible.
Configuring an access token  Set the accessToken attribute in the appropriate role; see the documentation. Restart Uchiwa to apply this change.  Providing the access token In a header
curl -H &amp;quot;Authorization: token TOKEN&amp;quot; https://localhost:3000/events  As a parameter</description>
    </item>
    
    <item>
      <title>Health API</title>
      <link>https://docs.uchiwa.io/api/health/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/api/health/</guid>
      <description>/health (GET) Returns both Uchiwa and Sensu API status
Response Example (Status 200) { &amp;quot;uchiwa&amp;quot;: &amp;quot;ok&amp;quot;, &amp;quot;sensu&amp;quot;: { &amp;quot;us-east-1&amp;quot;: { &amp;quot;output&amp;quot;: &amp;quot;ok&amp;quot; }, &amp;quot;us-west-1&amp;quot;:{ &amp;quot;output&amp;quot;: &amp;quot;ok&amp;quot; } } }  Response Codes    HTTP Status Code Reason     200 All the services are working   503 One of the service is unavailable    /health/{service} Returns status of Sensu API or Uchiwa service.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://docs.uchiwa.io/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.uchiwa.io/contributing/</guid>
      <description>Installation Backend Follow these instructions for the Go backend.
Frontend Optional. If you wish to modify the frontend components, you&amp;rsquo;ll need to follow these additional instructions:
Clone the uchiwa-web repository:
git clone git@github.com:sensu/uchiwa-web.git &amp;amp;&amp;amp; cd uchiwa-web  Install third-party libraries:
npm install # Standard user npm install --unsafe-perm # Root user  Create a global link for uchiwa-web:
bower link  Move to your uchiwa repository directory:
cd $GOPATH/src/github.com/sensu/uchiwa  Uninstall the uchiwa-web bower component if previously installed:</description>
    </item>
    
  </channel>
</rss>